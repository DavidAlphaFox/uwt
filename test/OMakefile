.PHONY: test clean build-tests btest all
.DEFAULT: build-tests

section
	OCAMLPACKS+= unix
	FILES=lock_helper
	Repeat_targets($(FILES))
	LOCKH=$(OCamlProgram lock_helper,$(FILES))
	export LOCKH
	clean::
		rm -f lock_helper

section
	.SCANNER: scan-c-%: ../src/config.h
	OCAMLPACKS+= lwt
	OCAMLINCLUDES[]+= ../src
	OCAML_LIBS+= ../src/uwt_base ../src/uwt
	MLFILES= t_lib
	CFILES= t_lib_stubs
	CFLAGS=$(CFLAGS) $(CFLAGS_LIBUV)
	LDFLAGS+=$(LDFLAGS_LIBUV)
	Repeat_targets($(MLFILES))
	Repeat_ctargets($(CFILES))
	TLIB=$(MixedLibrary t_lib, $(MLFILES), $(CFILES))
	export TLIB

OCAMLPACKS+= lwt bigarray unix threads $(LOGS_PKG) oUnit ppx_import ppx_deriving.show
OCAMLFLAGS+= -thread
OCAMLINCLUDES[]+= ../src ../src-log ../examples
MLIBS=../src/uwt-base ../src/uv-fs-sync ../src/uwt ../src/uwt-ext ../src/uwt-compat ../src/uwt-preemptive ../src-log/uwt-log ../examples/show_uwt t_lib
OCAML_LIBS+= $(MLIBS)

section
	FILES[]= main common tstream t_unix t_preemptive t_fs t_fs_sync t_tcp t_spawn t_fs_event \
	 t_udp t_pipe t_dns t_misc t_signal t_poll t_fs_poll t_tty t_gc t_stub t_timer t_io
	test.opt: $(addsuffix .cmxa, $(MLIBS)) ../src/libuwt-base$(EXT_LIB)
	test.run: $(addsuffix .cma, $(MLIBS)) ../src/libuwt-base$(EXT_LIB)
	Repeat_targets($(FILES))
	TEST_PROG=$(OCamlProgram test,$(FILES))
	build-tests:: $(LOCKH) $(TEST_PROG)
	clean::
		rm -f $(TEST_PROG)$(EXE)
	test:: $(LOCKH) $(TEST_PROG)
		./test$(EXE)
	btest: $(LOCKH) $(TEST_PROG)
		./test.run

if $(equal $(INTERNAL_LIBUV),$(EMPTY))
	clean::
		clean-helper()
else
	clean::
		clean-helper-keep($(basename $(INTERNAL_LIBUV)))

distclean:: clean
	clean-helper()
	rm -f *~ $(basename $(INTERNAL_LIBUV))

all:: build-tests
